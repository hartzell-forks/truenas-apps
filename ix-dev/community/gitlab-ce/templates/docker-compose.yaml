{% set tpl = ix_lib.base.render.Render(values) %}

{% set c1 = tpl.add_container(values.consts.gitlab_container_name, "image") %}
{% set perm_container = tpl.deps.perms(values.consts.perms_container_name) %}

{% do c1.add_caps(["CHOWN", "DAC_OVERRIDE", "FOWNER", "KILL", "NET_BIND_SERVICE", "SETGID", "SETUID"]) %}

{% set proto = "http" %}

{% do c1.healthcheck.set_test("curl", {"port": values.network.web_port, "path": "/-/health", "scheme": proto}) %}

{% do c1.environment.add_env("GITLAB_ROOT_PASSWORD", values.gitlab.root_password) %}

{% set external_url_stmt = "external_url '" ~ proto ~ "://" ~ values.hostname ~ ":" ~ values.network.web_port ~ "'" %}
{% set ssh_port_stmt = "gitlab_rails['gitlab_shell_port'] = " ~ values.network.ssh_port %}
{% do c1.environment.add_env("GITLAB_OMNIBUS_CONFIG", external_url_stmt ~ "; " ~ ssh_port_stmt) %}

{% if values.gitlab.additional_envs %}
  {% do c1.environment.add_user_envs(values.gitlab.additional_envs) %}
{% endif %}

{% do c1.ports.add_port(values.network.web_port, values.network.web_port) %}
{% do c1.ports.add_port(values.network.ssh_port, values.network.ssh_port) %}

{% set perms_config = {"uid": values.consts.run_as_user, "gid": values.consts.run_as_group, "mode": "check"} %}

{% do c1.add_storage("/etc/gitlab", values.storage.config) %}
{% do perm_container.add_or_skip_action("/etc/gitlab", values.storage.config, perms_config) %}

{% do c1.add_storage("/var/opt/gitlab", values.storage.data) %}
{% do perm_container.add_or_skip_action("/var/opt/gitlab", values.storage.data, perms_config) %}

{% do c1.add_storage("/var/log/gitlab", values.storage.logs) %}
{% do perm_container.add_or_skip_action("/var/log/gitlab", values.storage.logs, perms_config) %}

{% for store in values.storage.additional_storage %}
  {% do c1.add_storage(store.mount_path, store) %}
{% endfor %}

{% do tpl.portals.add_portal({"port": values.network.web_port, "scheme": proto}) %}

{{ tpl.render() | tojson }}
